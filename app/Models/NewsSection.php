<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Support\Carbon;

/**
 * Class NewsSection
 *
 * @package App\Models
 * @property int     id
 * @property Carbon  created_at
 * @property Carbon  updated_at
 * @property int     state
 * @property Carbon  active_from
 * @property Carbon  activeFrom
 * @property string  name
 * @property string  code
 * @property Collection newsElement
 * @mixin IdeHelperNewsSection
 */
class NewsSection extends Model
{
    use HasFactory;

    protected $casts = [
        'active_from' => 'datetime',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope('activeAndPublish', function (Builder $builder) {
            $builder
                ->where('state', '=', 1)
                ->where('active_from', '<=', Carbon::now());
        });
    }

    /**
     * Дата публикации
     *
     * @return Carbon
     */
    public function getActiveFrom() : Carbon
    {
        return $this->active_from;
    }

    /**
     * Название категории
     *
     * @return string
     */
    public function getName() : string
    {
        return $this->name;
    }

    /**
     * Символьный код категории
     *
     * @return string
     */
    public function getCode() : string
    {
        return $this->code;
    }

    /**
     * Новости
     *
     * @return HasMany
     */
    public function newsElement() : HasMany
    {
        return $this->hasMany(NewsElement::class, 'news_section_id', 'id');
    }

}
